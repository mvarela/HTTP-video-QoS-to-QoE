d1 <- read.csv("distributions_8, 1, 8000,txt")
library("entropy")
KL.plugin(d1$original,d1$predicted)
d2 <- read.csv("distributions_12, 1, 12000,txt")
KL.plugin(d2$original,d2$predicted)
filenames <- list.files(pattern="*.csv", full.names=TRUE)
filenames
filenames <- list.files(".", pattern="*.csv", full.names=TRUE)
filenames
filenames <- list.files(".", pattern="*.txt", full.names=TRUE)
filenames
ldf <- lapply(filenames, read.csv)
ldf
library("entropy")
mykl <- function(df){
k <- KL.plugin(df$original, df$predicted)
return(k(
}
mykl <- function(df){
k <- KL.plugin(df$original, df$predicted)
return(k)
}
res<-lapply(ldf, mukl)
res<-lapply(ldf, mykl)
res

dist_s <- ds$predicted
dist_s
help sample
help(sample_)
help(sample)
sample.int(1000, prob=dist_s)
help(sample)
sample.int(size=1000, n=length(dist_s), prob=dist_s)
sample.int(size=1000, n=length(dist_s), prob=dist_s, replace=TRUE)
ss<-sample.int(size=1000, n=length(dist_s), prob=dist_s, replace=TRUE)
hist(ss)
length(dist_s)
dist_s
ss<-sample(size=1000, [0,1,2,3,4,5,6,7,8,9,10], prob=dist_s, replace=TRUE)
ss<-sample(size=1000, 0:11, prob=dist_s, replace=TRUE)
ss<-sample(size=1000, 0:10, prob=dist_s, replace=TRUE)
ss
ss<-sample(size=10000, 0:10, prob=dist_s, replace=TRUE)
hist(ss)
duration <- read.csv("../duration/distributions_8.0, 1.3, 12000.0.txt")

dist_d
length(dist_d)
ds<-sample(size=10000, 0:18, prob=dist_d, replace=TRUE)
ds
hist(dd)
hist(ds)


hist(ds)
smoothScatter(ds,ss)
package.install("car")
install.packages("car")
